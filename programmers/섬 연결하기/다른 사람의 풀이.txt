def solution(n, costs):
    costs = sorted(costs, key=lambda x:x[2])  # 비용을 기준으로 오름차순 정렬
    node = set([costs[0][0], costs[0][1]])  # 연결된 노드를 담는다.
    answer = costs[0][2]  # 비용을 담아놓음

    while len(node) != n:  # 연결된 노드 수가 모든 노드의 수 n이 아니라면 반복
        for i in range(1, len(costs)):  # 간선의 수만큼 반복
            if costs[i][0] in node and costs[i][1] in node:  # 두 노드가 연결되어 있다면 continue
                continue
            if costs[i][0] in node or costs[i][1] in node:  # 두 노드 중 하나라도 다른 노드와 연결되어 있다면
                node.update([costs[i][0], costs[i][1]])  # 두 노드 모두 추가
                answer += costs[i][2]  # 비용 더하기
                break
    return answer